methods:

    - stereo acquisition: several pictures taken by several cameras pre calibrated to reconstruct a 3d model. Downside: sensitive to lighting
    - structured light: project a structured light pattern on the surface of the object. Downside: costly, extremely sensitive to lighting and distance
    - active sensing: laser to calculate distance and a range image. Downside: expensive equipment + time-consuming

classification criteria: (depend on lighting) + (not accurate enough)

    - jaw height (point 0-4)
    - 1/2 jaw circumference (4-8)
    - forehead width (distance between 2 outer points of two eyebrows) (point 17, 26)
    - distance between 2 eyebrows (distance between 2 inner points of two eyebrows) (point 21, 22)
    - average width of eyes (point 36, 39 and point 42, 45)
    - average height of eyes (max(point 37, 41 and point 38, 40) and max(point 43, 47 and point 44, 46))
    - average distance between eyes and brows (avg(point 19, 37 and point 19, 38) and avg(point 24, 43 and point 24, 44))
    - nose length (point 27, 30)
    - nose width (nostril) (point 31, 35)
    - distance between upper lip and nostril (point 33, 51)
    - upper lip height avg(point 50, 61 and point 52, 63)
    - lower lip height avg(point 56, 65 and point 58, 67)
    - distance between lower lip to chin (point 57, 8)
    - lower jawbone angle (4:8 and 8:12)
    - chin angle (point 7, 8 and point 8, 9)
    - nose angle (point 27, 30 and point 30, 33)
    - jawbone angle (point 0, 3 and point 13, 16)

    - new criteria: 4 angles above + distance between any 2 of 68 points got from modelling + average width of eyes +
    average height of eyes + average distance between eyes and brows + upper lip height + lower lip height

    - new problem: too many features, on big dataset like a dataset of employees of a company, it might not matter too
    much, but on the test dataset like I used, it could potentially break the prediction model. If encountered this
    problem, suggested that you use PCA to reduce the dimension

steps:

    - create a model
    - calculate the above criteria
    - create and matrix of information
    - normalize that matrix
    - put through an classifier (preferably ensemble)

important note:

    - To create a 3d model of the face is extremely realised on lighting, exposure of the camera, and how good is the camera, the demo is on a laptop webcam.
    - Also the 3d model with realised heavily on the angle of the face that are captured. It is recommended that the subject tilt the face a 5-15 degree angle instead of keeping the face straight to the cam
    - A better solution would be to set up at least 2 cameras to capture more than 2 angle of the user. Create 2 face models than get the average of them
    - One tiny issue it that the coordinate of the points, and subsequently the distance between two points, is depend on the size and the definition of the picture
    - through trials, discover that the eye-nose seems to distinguish between user the best.
